name: deploy using dockerfile and acr to webapp
on:
 push:
  branches: [main]
 workflow_dispatch:

permissions:
  id-token: write 
  contents: read
  
env:
  REGISTRY_NAME: dockertestapp     # <-- Replace with your ACR name (without .azurecr.io)
  IMAGE_NAME: richadockertest              # <-- Replace with your app name
  IMAGE_TAG: ${{ github.sha }}    # Tag image with commit SHA
  APP_SERVICE_NAME: richadockertest # <-- Replace with your App Service name
  
jobs:
 build:
  runs-on: ubuntu-latest
  steps:
  - name: checkout code
    uses: actions/checkout@v5.0.0

  - name: Azure Login (OIDC)
    uses: azure/login@v2.3.0
    with:
       client-id: ${{ secrets.CLIENTID }}
       tenant-id: ${{ secrets.TENANTID }}
       subscription-id: ${{ secrets.SUBSCRIPTIONID }}
       auth-type: SERVICE_PRINCIPAL

  - name: login to ACR
    uses: docker/login-action@v3
    with:
        registry: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

  - name: Build and push image
    run: |
      echo "Building image..."
      docker build -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
      echo "Pushing image to ACR..."
      docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      
 deploy:
  runs-on: ubuntu-latest
  needs: build
  steps:
  - name: deploy to app service
    uses:  azure/webapps-deploy@v2
    with:
      app-name: ${{ env.APP_SERVICE_NAME }}
      images: ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
